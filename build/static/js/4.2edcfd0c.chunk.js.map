{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Contacts/Contacts.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","redux/Contacts/contactsAPI.js","redux/Contacts/operations.js","redux/Contacts/selectors.js","components/Contacts/Contacts.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/PrivateContactsView/PrivateContactsView.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","fetchContactsAPI","a","axios","get","data","addContactAPI","contact","post","deleteContactAPI","id","delete","defaults","baseURL","getFilter","state","contacts","filter","getLoadingStatus","loading","getVisibleContacts","createSelector","items","name","toLowerCase","includes","Contacts","contactsItem","useSelector","dispatch","useDispatch","useEffect","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","className","s","contactsList","map","item","contactsText","number","contactsBtn","type","onClick","deleteContactRequest","deleteContactSuccess","deleteContactError","Form","useState","setName","setNumber","handleInput","event","currentTarget","reset","onSubmit","preventDefault","addContactRequest","gettingData","addingContact","addContactSuccess","addContactError","form","formLabel","formInput","onChange","pattern","title","required","formBtn","Filter","filterWrapper","filterLabel","filterInput","e","filterContacts","target","PrivateContactsView"],"mappings":"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","file":"static/js/4.2edcfd0c.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"Contacts_contactsItem__qYpOM\",\"contactsText\":\"Contacts_contactsText__Vd6NR\",\"contactsBtn\":\"Contacts_contactsBtn__2A_Ky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2t_YK\",\"formLabel\":\"Form_formLabel__1nZZD\",\"formInput\":\"Form_formInput__39HRU\",\"formBtn\":\"Form_formBtn__23hXw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__2hZND\",\"filterLabel\":\"Filter_filterLabel__3dxFP\",\"filterInput\":\"Filter_filterInput__2KE7g\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nexport async function fetchContactsAPI() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\nexport async function addContactAPI(contact) {\r\n  const { data } = await axios.post('/contacts', contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContactAPI(id) {\r\n  await axios.delete(`/contacts/${id}`);\r\n}\r\n","import {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './actions';\r\nimport {\r\n  addContactAPI,\r\n  fetchContactsAPI,\r\n  deleteContactAPI,\r\n} from 'redux/Contacts/contactsAPI';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const contacts = await fetchContactsAPI();\r\n    dispatch(fetchContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\nexport const addContact = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n  const gettingData = await fetchContactsAPI();\r\n  if (gettingData) {\r\n    const nameArray = gettingData.map(item => {\r\n      return item.name;\r\n    });\r\n    if (!nameArray.includes(contact.name)) {\r\n      try {\r\n        const addingContact = await addContactAPI(contact);\r\n        dispatch(addContactSuccess(addingContact));\r\n      } catch (error) {\r\n        dispatch(addContactError(error));\r\n      }\r\n    } else {\r\n      dispatch(addContactError(`${contact.name} is already in contacts.`));\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await deleteContactAPI(id);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import { createSelector } from 'reselect';\r\nexport const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoadingStatus = state => state.contacts.loading;\r\nexport const getVisibleContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (items, filter) => {\r\n    return items.filter(({ name }) => name.toLowerCase().includes(filter));\r\n  },\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact, fetchContacts } from 'redux/Contacts/operations';\r\nimport { getVisibleContacts, getLoadingStatus } from 'redux/Contacts/selectors';\r\nimport Spinner from 'components/Loader/Loader';\r\nimport s from './Contacts.module.css';\r\n\r\nexport default function Contacts() {\r\n  const contactsItem = useSelector(getVisibleContacts);\r\n  const loading = useSelector(getLoadingStatus);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\r\n\r\n  if (contactsItem) {\r\n    if (loading) {\r\n      return <Spinner />;\r\n    }\r\n    return (\r\n      <ul className={s.contactsList}>\r\n        {contactsItem.map(item => (\r\n          <li key={item.id} className={s.contactsItem}>\r\n            <p className={s.contactsText}>\r\n              {item.name}: {item.number}\r\n            </p>\r\n            <button\r\n              className={s.contactsBtn}\r\n              type=\"button\"\r\n              onClick={() => dispatch(deleteContact(item.id))}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  return;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from 'redux/Contacts/operations';\r\nimport { getLoadingStatus } from 'redux/Contacts/selectors';\r\nimport Spinner from 'components/Loader/Loader';\r\nimport s from './Form.module.css';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(getLoadingStatus);\r\n\r\n  const handleInput = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === 'name') {\r\n      setName(value);\r\n    } else if (name === 'number') {\r\n      setNumber(value);\r\n    }\r\n  };\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch(\r\n      addContact({\r\n        name,\r\n        number,\r\n      }),\r\n    );\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.formLabel}>\r\n        Name\r\n        <input\r\n          className={s.formInput}\r\n          value={name}\r\n          onChange={handleInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.formLabel}>\r\n        Number\r\n        <input\r\n          className={s.formInput}\r\n          value={number}\r\n          onChange={handleInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.formBtn}>\r\n        Add to contacts\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterContacts } from 'redux/Contacts/actions';\r\nimport { getFilter } from 'redux/Contacts/selectors';\r\nimport { getLoadingStatus } from 'redux/Contacts/selectors';\r\nimport Spinner from 'components/Loader/Loader';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(getLoadingStatus);\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label className={s.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.filterInput}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          onChange={e => dispatch(filterContacts(e.target.value))}\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Contacts from 'components/Contacts';\r\nimport Form from 'components/Form';\r\nimport Filter from 'components/Filter';\r\n\r\nexport default function PrivateContactsView() {\r\n  return (\r\n    <div>\r\n      <Form />\r\n      <Filter />\r\n      <Contacts />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}