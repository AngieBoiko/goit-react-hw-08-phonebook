{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/LogIn/styles.module.css","components/LogIn/LogIn.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","INITIAL_VALUES","email","password","LogIn","useState","showPassword","setShowPassword","dispatch","useDispatch","onClickToggle","useCallback","prevState","validate","values","errors","test","handleSubmit","setSubmitting","logIn","className","styles","form_title","initialValues","onSubmit","touched","handleBlur","handleChange","isSubmitting","form","htmlFor","form_field","type","name","placeholder","onBlur","error_message","component","onClick","Button","form_btn","color","variant","disabled","keys","to","routes","registration","link"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,KAAO,qBAAqB,WAAa,2BAA2B,WAAa,2BAA2B,cAAgB,8BAA8B,KAAO,qBAAqB,SAAW,2B,8KCQ7MC,EAAiB,CACrBC,MAAO,GACPC,SAAU,IAEG,SAASC,IACtB,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAWC,cAEXC,EAAgBC,uBAAY,SAAAC,GAChCL,GAAgB,SAAAK,GAAS,OAAKA,OAC7B,IAEGC,EAAWF,uBAAY,SAAAG,GAC3B,IAAMC,EAAS,GAMf,OALKD,EAAOZ,MAEA,2CAA2Cc,KAAKF,EAAOZ,SACjEa,EAAOb,MAAQ,yBAFfa,EAAOb,MAAQ,WAIVa,IACN,IAEGE,EAAeN,uBACnB,SAACG,EAAD,GAAgC,IAArBI,EAAoB,EAApBA,cACTV,EAASW,YAAML,IACfI,GAAc,KAEhB,CAACV,IAGH,OACE,gCACE,oBAAIY,UAAWC,IAAOC,WAAtB,wBACA,cAAC,IAAD,CACEC,cAAetB,EACfY,SAAUA,EACVW,SAAUP,EAHZ,SAKG,gBACCH,EADD,EACCA,OACAC,EAFD,EAECA,OACAU,EAHD,EAGCA,QAEAC,GALD,EAICC,aAJD,EAKCD,YAEAE,GAPD,EAMCX,aAND,EAOCW,cAPD,OASC,eAAC,IAAD,CAAMR,UAAWC,IAAOQ,KAAxB,UACE,uBAAOC,QAAQ,QAAf,oBACA,cAAC,IAAD,CACEV,UAAWC,IAAOU,WAClBC,KAAK,QACLC,KAAK,QACLC,YAAY,cACZC,OAAQT,IAEV,uBACA,cAAC,IAAD,CACEN,UAAWC,IAAOe,cAClBH,KAAK,QACLI,UAAU,QAEZ,uBAAOP,QAAQ,WAAf,uBACA,cAAC,IAAD,CACEV,UAAWC,IAAOU,WAClBC,KAAM1B,EAAe,OAAS,WAC9B2B,KAAK,WACLC,YAAY,iBACZC,OAAQT,IAEV,cAAC,IAAD,CACEN,UAAWC,IAAOe,cAClBH,KAAK,WACLI,UAAU,QAEZ,wBAAQL,KAAK,SAASM,QAAS5B,EAA/B,2BAGA,uBACA,cAAC6B,EAAA,EAAD,CACEnB,UAAWC,IAAOmB,SAClBC,MAAM,UACNC,QAAQ,YACRV,KAAK,SACLW,SACEf,KAEE7C,OAAO6D,KAAKnB,GAAS9B,SACnBZ,OAAO6D,KAAK3C,GAAgBN,QACH,IAA3BmB,EAAOX,SAASR,QACe,IAA/BZ,OAAO6D,KAAK7B,GAAQpB,QAX1B,0BAoBN,cAAC,IAAD,CAAMkD,GAAIC,IAAOC,aAAc3B,UAAWC,IAAO2B,KAAjD","file":"static/js/5.8d1a04de.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__3i-HG\",\"form_title\":\"styles_form_title__32naz\",\"form_field\":\"styles_form_field__2oMio\",\"error_message\":\"styles_error_message__1vqfr\",\"link\":\"styles_link__2afwH\",\"form_btn\":\"styles_form_btn__YPrFV\"};","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from 'utils/routes';\r\nimport { logIn } from 'redux/Auth/usersAPI';\r\nimport styles from './styles.module.css';\r\n\r\nconst INITIAL_VALUES = {\r\n  email: '',\r\n  password: '',\r\n};\r\nexport default function LogIn() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickToggle = useCallback(prevState => {\r\n    setShowPassword(prevState => !prevState);\r\n  }, []);\r\n\r\n  const validate = useCallback(values => {\r\n    const errors = {};\r\n    if (!values.email) {\r\n      errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n    return errors;\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    (values, { setSubmitting }) => {\r\n      dispatch(logIn(values));\r\n      setSubmitting(false);\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={styles.form_title}>Login form</h1>\r\n      <Formik\r\n        initialValues={INITIAL_VALUES}\r\n        validate={validate}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form className={styles.form}>\r\n            <label htmlFor=\"email\">Email </label>\r\n            <Field\r\n              className={styles.form_field}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter email\"\r\n              onBlur={handleBlur}\r\n            />\r\n            <br />\r\n            <ErrorMessage\r\n              className={styles.error_message}\r\n              name=\"email\"\r\n              component=\"div\"\r\n            />\r\n            <label htmlFor=\"password\">Password </label>\r\n            <Field\r\n              className={styles.form_field}\r\n              type={showPassword ? 'text' : 'password'}\r\n              name=\"password\"\r\n              placeholder=\"Enter password\"\r\n              onBlur={handleBlur}\r\n            />\r\n            <ErrorMessage\r\n              className={styles.error_message}\r\n              name=\"password\"\r\n              component=\"div\"\r\n            />\r\n            <button type=\"button\" onClick={onClickToggle}>\r\n              Show password\r\n            </button>\r\n            <br />\r\n            <Button\r\n              className={styles.form_btn}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              disabled={\r\n                isSubmitting ||\r\n                !(\r\n                  Object.keys(touched).length ===\r\n                    Object.keys(INITIAL_VALUES).length &&\r\n                  values.password.length !== 0 &&\r\n                  Object.keys(errors).length === 0\r\n                )\r\n              }\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <Link to={routes.registration} className={styles.link}>\r\n        Have not account yet?We are waiting for you on registration page!\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}